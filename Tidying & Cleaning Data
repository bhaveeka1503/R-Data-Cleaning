---
title: "Project 4"
author: "Bhaveeka Matlani"
date: "12/1/2023"
output:
  word_document: default
  html_notebook: default
  pdf_document: default
  html_document: default
editor_options:
  chunk_output_type: inline
---

```{r active="", eval=FALSE}
# BEGIN ASSIGNMENT 
```

```{r include=FALSE, error=TRUE, label=setup, message=FALSE}
#| label: setup
#| include: false
#| message: false
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stringr)
library(repurrrsive)
library(tidymodels)
library(arrow)
library(openxlsx)
library(scales)
library(dplyr)


tidymodels_prefer() # to specify that tidymodels functions override those from other packages
```

**NOTE**: If you have used AI(s) in producing some of your work, please list the respective AI(s) as a collaborator below. Please also describe the contribution from the input of the AI(s) in the textbox, as well as provide details on how you have used the AI(s) in the process.

```         
   If you have used AI(s), input information in this box.
```

# Project 4

## Overview

In this project, we will continue using the NOAA storm data set, which you have already worked with in Projects 2 and 3, and the sea ice data set, which you have seen in Project 3, as well as in lectures. We will preprocess the data and attempt to build linear regression models for aspects in the data.

## Model for Pacific and Atlantic hurricanes

We first load the hurricane data from NOAA, which you have worked with in both Projects 2 and 3.

```{r error=TRUE}
# Nothing to change here
cyclone_data_address <- "https://www.nhc.noaa.gov/data/hurdat/"
AT_cyclone <- "hurdat2-1851-2022-050423.txt"
NP_cyclone <- "hurdat2-nepac-1949-2022-050423.txt"
cyclone_files <- c(AT_cyclone, NP_cyclone)

new_columns <- c("status", "latitude", "longitude", "max_wind", "min_pressure", "NE_extend_34", "SE_extend_34", "SW_extend_34", "NW_extend_34", "NE_extend_50", "SE_extend_50", "SW_extend_50", "NW_extend_50", "NE_extend_64", "SE_extend_64", "SW_extend_64", "NW_extend_64", "r_max_wind"
)

cat_levels <- c("TD", "TS", "1", "2", "3", "4", "5")
```

We reuse the code to load the data from NOAA directly and put them into a dataframe named `cyclones`, as in Project 3 or combining codes from Lectures 9 and 17.

```{r error=TRUE, tags=c()}

read_cyclone <- function(single_file = AT_cyclone) {
  
  output <- str_c(cyclone_data_address, single_file, sep = "") |>
    
    read_csv(col_names = c("1","2","3","4")) |>
    
    separate_wider_delim("4", delim = ",", names = new_columns) |>

    mutate(across(everything(), str_trim)) |>
    
    mutate_all(~ifelse(. == "-999", NA, .)) |>
    
    mutate(
      BasinNumberYear = ifelse(is.na(status), `1`, NA),
      
      Name = ifelse(is.na(status), `2`, NA),
      
      Entries = ifelse(is.na(status), `3`, NA)) |>
    
    relocate(BasinNumberYear, Name, Entries) |>
    
    fill(BasinNumberYear, Name, Entries) |>
    
    filter(!is.na(status)) |>
    
    select(-Entries) |>
    
    separate_wider_position(
      cols = BasinNumberYear,
      
      widths = c(
        Basin = 2,
        Number = 2,
        NameYear = 4 )) |>
    
    separate_wider_position(
      cols = `1`,
      widths = c(
        ObservYear = 4,
        Month = 2,
        Day = 2)) |>
    
    separate_wider_position(
      cols = `2`,
      widths = c(
        Hour = 2,
        Minute = 2 )) |>
    
    rename(Identifier = `3`) |>
    
    mutate(
      across(c(NameYear, ObservYear, Month, Day, Hour, Minute, Number),          as.integer),
      
      across(max_wind:r_max_wind, as.double)) |>
    
    mutate(max_wind = na_if(max_wind, -99))
  
  output
}

convert_latlong <- function(df) {
  
  output <- df |>
    
    mutate(
      num_lat = if_else(str_sub(latitude,-1,-1) == "N", str_sub(latitude,1,-2), str_c("-", str_sub(latitude,1,-2))),
      
      num_long = if_else(str_sub(longitude,-1,-1) == "E", str_sub(longitude,1,-2), str_c("-", str_sub(longitude,1,-2)))) |>
    
    mutate(num_long = if_else(num_long == "--0.0", "-0.0", num_long)) |>
    mutate(across(c(num_lat, num_long), as.numeric))
  
  output
}

cyclones_raw <- cyclone_files |>
  
  map(read_cyclone)

(cyclones<- cyclones_raw |>
    
    map(convert_latlong) |>
    
    list_rbind() |>
    
    mutate(
      observ_time = make_datetime(ObservYear, Month, Day, Hour, Minute),
      
      category = ordered(
        
        case_when(
          max_wind <= 33 ~ "TD",
          max_wind <= 63 ~ "TS",
          max_wind <= 82 ~ "1",
          max_wind <= 95 ~ "2",
          max_wind <= 112 ~ "3",
          max_wind <= 136 ~ "4",
          max_wind > 137 ~ "5"
        ), 
        
        levels = cat_levels))
)

```
